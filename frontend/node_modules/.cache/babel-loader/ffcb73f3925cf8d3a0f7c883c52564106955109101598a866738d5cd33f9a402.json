{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\51D1B3\\\\MesProjets\\\\Pharmacie\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/api.jsx';\nimport connectionTracker from '../services/connectionTracker.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('accessToken');\n      const userData = localStorage.getItem('user');\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          setUser(user);\n        } catch (error) {\n          console.error('Error parsing user data:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    // Clear session when window is closed\n    const handleBeforeUnload = () => {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    initializeAuth();\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const {\n        user,\n        tokens\n      } = await apiService.login(email, password);\n      localStorage.setItem('accessToken', tokens.accessToken);\n      localStorage.setItem('refreshToken', tokens.refreshToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n\n      // Marquer l'utilisateur comme connecté\n      await connectionTracker.markUserConnected();\n      return user; // Return user for role-based routing\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const {\n        user,\n        tokens\n      } = await apiService.register(userData);\n      localStorage.setItem('accessToken', tokens.accessToken);\n      localStorage.setItem('refreshToken', tokens.refreshToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    // Marquer l'utilisateur comme déconnecté\n    await connectionTracker.markUserDisconnected();\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const updateUser = async userData => {\n    try {\n      const updatedUser = await apiService.updateProfile(userData);\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    } catch (error) {\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiService","connectionTracker","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","token","localStorage","getItem","userData","JSON","parse","error","console","removeItem","handleBeforeUnload","window","addEventListener","removeEventListener","login","email","password","tokens","setItem","accessToken","refreshToken","stringify","markUserConnected","register","logout","markUserDisconnected","updateUser","updatedUser","updateProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/51D1B3/MesProjets/Pharmacie/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport apiService from '../services/api.jsx';\nimport connectionTracker from '../services/connectionTracker.js';\n\nconst AuthContext = createContext(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('accessToken');\n      const userData = localStorage.getItem('user');\n\n      if (token && userData) {\n        try {\n          const user = JSON.parse(userData);\n          setUser(user);\n        } catch (error) {\n          console.error('Error parsing user data:', error);\n          localStorage.removeItem('accessToken');\n          localStorage.removeItem('refreshToken');\n          localStorage.removeItem('user');\n        }\n      }\n      setLoading(false);\n    };\n\n    // Clear session when window is closed\n    const handleBeforeUnload = () => {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      localStorage.removeItem('user');\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    \n    initializeAuth();\n\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      const { user, tokens } = await apiService.login(email, password);\n      localStorage.setItem('accessToken', tokens.accessToken);\n      localStorage.setItem('refreshToken', tokens.refreshToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n      \n      // Marquer l'utilisateur comme connecté\n      await connectionTracker.markUserConnected();\n      \n      return user; // Return user for role-based routing\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const { user, tokens } = await apiService.register(userData);\n      localStorage.setItem('accessToken', tokens.accessToken);\n      localStorage.setItem('refreshToken', tokens.refreshToken);\n      localStorage.setItem('user', JSON.stringify(user));\n      setUser(user);\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    // Marquer l'utilisateur comme déconnecté\n    await connectionTracker.markUserDisconnected();\n    \n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const updateUser = async (userData) => {\n    try {\n      const updatedUser = await apiService.updateProfile(userData);\n      setUser(updatedUser);\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}