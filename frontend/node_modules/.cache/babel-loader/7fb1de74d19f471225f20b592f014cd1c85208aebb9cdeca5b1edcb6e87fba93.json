{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\51D1B3\\\\MesProjets\\\\Pharmacie\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  return useContext(ThemeContext);\n};\n_s(useTheme, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  // Toujours en mode clair (blanc) par défaut\n  const [theme, setTheme] = useState('light');\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove('light', 'dark');\n    root.classList.add(theme);\n    // On ne stocke plus le thème dans localStorage pour forcer le mode clair\n  }, [theme]);\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  const value = {\n    theme,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"Z8UCD9KudyQA62DCQ9e5cf9+m5k=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","ThemeProvider","children","_s2","theme","setTheme","root","window","document","documentElement","classList","remove","add","toggleTheme","prevTheme","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/51D1B3/MesProjets/Pharmacie/frontend/src/contexts/ThemeContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => useContext(ThemeContext);\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Toujours en mode clair (blanc) par défaut\r\n  const [theme, setTheme] = useState('light');\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n    root.classList.remove('light', 'dark');\r\n    root.classList.add(theme);\r\n    // On ne stocke plus le thème dans localStorage pour forcer le mode clair\r\n  }, [theme]);\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prevTheme) => (prevTheme === 'light' ? 'dark' : 'light'));\r\n  };\r\n\r\n  const value = {\r\n    theme,\r\n    toggleTheme,\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAML,UAAU,CAACG,YAAY,CAAC;AAAA;AAACE,EAAA,CAA1CD,QAAQ;AAErB,OAAO,MAAME,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACd,MAAMY,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,eAAe;IAC5CH,IAAI,CAACI,SAAS,CAACC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC;IACtCL,IAAI,CAACI,SAAS,CAACE,GAAG,CAACR,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAAES,SAAS,IAAMA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAQ,CAAC;EACrE,CAAC;EAED,MAAMC,KAAK,GAAG;IACZX,KAAK;IACLS;EACF,CAAC;EAED,oBACEhB,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAb,QAAA,EACjCA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACjB,GAAA,CAzBWF,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}