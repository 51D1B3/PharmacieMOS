{"ast":null,"code":"/**\n * Utilitaire pour formater les prix en GNF (Francs Guinéens)\n */\n\n/**\n * Formate un prix en GNF avec séparateurs de milliers\n * @param {number} price - Le prix à formater\n * @param {boolean} showCurrency - Afficher ou non la devise (défaut: true)\n * @returns {string} Prix formaté\n */\nexport const formatPrice = (price, showCurrency = true) => {\n  if (price === null || price === undefined || isNaN(price)) {\n    return showCurrency ? '0 GNF' : '0';\n  }\n  const formattedPrice = Math.round(price).toLocaleString('fr-FR');\n  return showCurrency ? `${formattedPrice} GNF` : formattedPrice;\n};\n\n/**\n * Formate un prix avec remise\n * @param {number} originalPrice - Prix original\n * @param {number} discountedPrice - Prix avec remise\n * @returns {object} Objet contenant les prix formatés\n */\nexport const formatPriceWithDiscount = (originalPrice, discountedPrice) => {\n  return {\n    original: formatPrice(originalPrice),\n    discounted: formatPrice(discountedPrice),\n    savings: formatPrice(originalPrice - discountedPrice)\n  };\n};\n\n/**\n * Calcule et formate le pourcentage de remise\n * @param {number} originalPrice - Prix original\n * @param {number} discountedPrice - Prix avec remise\n * @returns {string} Pourcentage de remise formaté\n */\nexport const calculateDiscountPercentage = (originalPrice, discountedPrice) => {\n  if (!originalPrice || !discountedPrice || originalPrice <= discountedPrice) {\n    return '0%';\n  }\n  const percentage = Math.round((originalPrice - discountedPrice) / originalPrice * 100);\n  return `${percentage}%`;\n};","map":{"version":3,"names":["formatPrice","price","showCurrency","undefined","isNaN","formattedPrice","Math","round","toLocaleString","formatPriceWithDiscount","originalPrice","discountedPrice","original","discounted","savings","calculateDiscountPercentage","percentage"],"sources":["C:/Users/51D1B3/MesProjets/Pharmacie/frontend/src/services/priceFormatter.js"],"sourcesContent":["/**\n * Utilitaire pour formater les prix en GNF (Francs Guinéens)\n */\n\n/**\n * Formate un prix en GNF avec séparateurs de milliers\n * @param {number} price - Le prix à formater\n * @param {boolean} showCurrency - Afficher ou non la devise (défaut: true)\n * @returns {string} Prix formaté\n */\nexport const formatPrice = (price, showCurrency = true) => {\n  if (price === null || price === undefined || isNaN(price)) {\n    return showCurrency ? '0 GNF' : '0';\n  }\n  \n  const formattedPrice = Math.round(price).toLocaleString('fr-FR');\n  return showCurrency ? `${formattedPrice} GNF` : formattedPrice;\n};\n\n/**\n * Formate un prix avec remise\n * @param {number} originalPrice - Prix original\n * @param {number} discountedPrice - Prix avec remise\n * @returns {object} Objet contenant les prix formatés\n */\nexport const formatPriceWithDiscount = (originalPrice, discountedPrice) => {\n  return {\n    original: formatPrice(originalPrice),\n    discounted: formatPrice(discountedPrice),\n    savings: formatPrice(originalPrice - discountedPrice)\n  };\n};\n\n/**\n * Calcule et formate le pourcentage de remise\n * @param {number} originalPrice - Prix original\n * @param {number} discountedPrice - Prix avec remise\n * @returns {string} Pourcentage de remise formaté\n */\nexport const calculateDiscountPercentage = (originalPrice, discountedPrice) => {\n  if (!originalPrice || !discountedPrice || originalPrice <= discountedPrice) {\n    return '0%';\n  }\n  \n  const percentage = Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);\n  return `${percentage}%`;\n};"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,WAAW,GAAGA,CAACC,KAAK,EAAEC,YAAY,GAAG,IAAI,KAAK;EACzD,IAAID,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKE,SAAS,IAAIC,KAAK,CAACH,KAAK,CAAC,EAAE;IACzD,OAAOC,YAAY,GAAG,OAAO,GAAG,GAAG;EACrC;EAEA,MAAMG,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACN,KAAK,CAAC,CAACO,cAAc,CAAC,OAAO,CAAC;EAChE,OAAON,YAAY,GAAG,GAAGG,cAAc,MAAM,GAAGA,cAAc;AAChE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,uBAAuB,GAAGA,CAACC,aAAa,EAAEC,eAAe,KAAK;EACzE,OAAO;IACLC,QAAQ,EAAEZ,WAAW,CAACU,aAAa,CAAC;IACpCG,UAAU,EAAEb,WAAW,CAACW,eAAe,CAAC;IACxCG,OAAO,EAAEd,WAAW,CAACU,aAAa,GAAGC,eAAe;EACtD,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMI,2BAA2B,GAAGA,CAACL,aAAa,EAAEC,eAAe,KAAK;EAC7E,IAAI,CAACD,aAAa,IAAI,CAACC,eAAe,IAAID,aAAa,IAAIC,eAAe,EAAE;IAC1E,OAAO,IAAI;EACb;EAEA,MAAMK,UAAU,GAAGV,IAAI,CAACC,KAAK,CAAE,CAACG,aAAa,GAAGC,eAAe,IAAID,aAAa,GAAI,GAAG,CAAC;EACxF,OAAO,GAAGM,UAAU,GAAG;AACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}